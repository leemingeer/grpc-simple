// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "github.com/leemingeer/grpc-simple/lib/helloworld/helloworld";
import "google/api/annotations.proto";
package helloworld;

// Hello 服务，服务必定会有server来提供而且需要有链接该server的client, 本服务包含了4种类型rpc API
service Hello {
  // UnaryAPI
  rpc UnaryHello(HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      post: "/v1/UnaryHello"
      body: "*"
    };
  }
  // SServerStreaming
  rpc ServerStreamingHello(HelloRequest) returns (stream HelloReply) {}
  // ClientStreamingE
  rpc ClientStreamingHello(stream HelloRequest) returns (HelloReply) {}
  // BidirectionalStreaming
  rpc BidirectionalStreamingHello(stream HelloRequest) returns (stream HelloReply) {}
}
// The request message containing the user's name.
message HelloRequest {
  string name = 1;
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
